{"version":3,"sources":["base.js","Home.js","CreateGame.js","Lobby.js","Join.js","App.js","serviceWorker.js","index.js"],"names":["firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleJoin","ev","preventDefault","console","log","target","gameCode","value","setState","code","state","undefined","react_default","a","createElement","Redirect","to","concat","className","style","fontSize","mdbreact","onSubmit","type","name","color","label","outline","size","NavLink","textDecoration","cursor","paddingTop","Component","CreateGame","generateCode","Math","floor","random","goToLobby","assertThisInitialized","collection","doc","toString","set","players","then","catch","error","visible","updateName","onChange","onClick","Lobby","props","componentWillMount","self","onSnapshot","data","margin","backgroundColor","reactstrap_es","map","key","sm","height","Join","get","exists","unshift","App","Switch","Route","exact","path","render","src_CreateGame","setGameCode","src_Home","match","src_Lobby","params","src_Join","Boolean","window","location","hostname","ReactDOM","BrowserRouter","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6218974.chunk.js","sourcesContent":["// import firebase from 'firebase';\n// const firebase = require(\"firebase\");\n// // Required for side-effects\n// require(\"firebase/firestore\");\n// import firebase from 'firebase'\nvar firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDynm1iQEugqjNl9b4UoVD5ANFhdJ3uW3c\",\n  authDomain: \"tohell-b7845.firebaseapp.com\",\n  databaseURL: \"https://tohell-b7845.firebaseio.com\",\n  projectId: \"tohell-b7845\",\n  storageBucket: \"tohell-b7845.appspot.com\",\n  messagingSenderId: \"568288665390\"\n});\n\n// export const  db = firebase.database();\n\nexport const db = firebase.firestore();\n\nconst settings = {timestampsInSnapshots: true};\ndb.settings(settings);\n\nexport default firebase;","import React, { Component } from 'react';\nimport './App.css';\nimport {db} from './base.js';\n\nimport { NavLink, Redirect} from 'react-router-dom'\n\nimport { FormInline, Button, MDBInput } from 'mdbreact';\n\nclass Home extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      code: 0\n    }\n  }\n\n  handleJoin = (ev) => {\n    ev.preventDefault()\n\n    console.log(ev.target.gameCode.value)\n    this.setState({code: ev.target.gameCode.value})\n    // this.checkGame(ev.target.gameCode.value)\n  }\n\n  // checkGame = (code) => {\n  //   var docRef = db.collection(\"games\").doc(code);\n\n  //   docRef.get().then(function(doc) {\n  //       if (doc.exists) {\n  //           console.log(\"Document data:\", doc.data());\n  //       } else {\n  //           console.log(\"No such document!\");\n  //       }\n  //   })\n    \n  // }\n\n\n  render() {\n\n    if (this.state.code !== null && this.state.code !== 0 && this.state.code !== undefined) {\n      return <Redirect to={`/ToHell/Join/${this.state.code}`}/>\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p style={{fontSize: \"2em\"}}>\n            To Hell and Back!\n          </p>\n      \n\n          <FormInline onSubmit={this.handleJoin} className=\"md-form m-0\">\n        \n            <MDBInput type=\"number\" name='gameCode' style={{color: \"whitesmoke\"}} label=\"Game Code\" />\n            \n              <Button\n                outline\n                color=\"white\"\n                size=\"sm\"\n                type=\"submit\"\n                className=\"mr-auto\"\n              >\n                Search\n              </Button>\n\n          </FormInline>\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/CreateGame`}>\n            <div style={{cursor: 'pointer'}} className='sideHover'>\n              <h6 style={{paddingTop: \"3em\", fontSize: '0.7em'}}>Create Game</h6>\n            </div>\n          </NavLink>\n        \n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nimport {db} from './base.js';\nimport {Button, MDBInput} from 'mdbreact'\nimport { NavLink } from 'react-router-dom'\n\nclass CreateGame extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      code: 0,\n      name: '',\n      visible: false,\n    }\n  }\n\n  componentWillMount() {\n    this.generateCode()    \n  }\n\n  generateCode = () => {\n    // TODO Make sure code is not already being used\n    let code = Math.floor(Math.random()*90000) + 10000\n\n    this.setState({code: code})\n  }\n\n  goToLobby = () => {\n    let self = this\n    if (this.state.name === null || this.state.name === '' || this.state.name === undefined) {\n      this.setState({visible: true})\n      return\n    }\n\n    // db.ref(`games/${this.state.code.toString()}`).set({\n    //   players: [this.state.name],\n    // });\n\n    db.collection(\"games\").doc(this.state.code.toString()).set({\n      players: [this.state.name]\n    })\n    .then(function() {\n        console.log(\"Document successfully written!\");\n    })\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    });\n  }\n\n  updateName = (ev) => {\n    this.setState({name: ev.target.value})\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <p style={{fontSize: \"2em\"}}>\n                Game Code: {this.state.code}\n          </p>\n\n          { this.state.visible ? <p style={{fontSize: '0.8em'}}>Please enter your name for the game!</p> : null  }\n            \n          <MDBInput onChange={this.updateName} name='gameCode' style={{color: \"whitesmoke\"}} label=\"Name\" />\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/Lobby/${this.state.code}`}>\n            <Button\n                outline\n                color=\"primary\"\n                onClick={this.goToLobby}\n            >\n                Go to Lobby!\n            </Button>\n          </NavLink>\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default CreateGame;\n","import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom'\nimport {db} from './base.js';\nimport {Row, Col} from 'reactstrap'\nimport {Button} from 'mdbreact'\n\nclass Lobby extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      players: [],\n    }\n  }\n\n  componentWillMount = () => {\n    let self = this\n\n    db.collection(\"games\").doc(this.props.code.toString())\n    .onSnapshot(function(doc) {\n        console.log(doc.data().players);\n        self.setState({players: doc.data().players})\n    });\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n\n        <p style={{margin: '0', fontSize: '2.5em', \n                  backgroundColor: '#282c34', color: \"whitesmoke\", \n                  paddingTop: '2em'}}\n        >\n          Join at Code: {this.props.code}\n        </p>\n\n        <div style={{backgroundColor: '#282c34', color: 'whitesmoke',\n                      paddingTop: '5em', }}>\n                      \n          <Row>\n          {this.state.players.map((key) => {\n             return (\n              <Col sm='3'>\n                <p>{key}</p>\n              </Col> \n                  \n            )\n          })}\n  \n          </Row>\n\n          <p style={{height: '5em'}}> </p>\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/Game/`}>\n            <Button\n                outline\n                color=\"primary\"\n                \n            >\n                Start!\n            </Button>\n          </NavLink>\n\n          </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Lobby;\n","import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom'\nimport {db} from './base.js';\nimport {Button, FormInline, MDBInput} from 'mdbreact'\n\nclass Join extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      visible: false,\n    }\n  }\n\n  goToLobby = () => {\n    let self = this\n    if (this.state.name === null || this.state.name === '' || this.state.name === undefined) {\n      this.setState({visible: true})\n      return\n    }\n\n    // TODO Set stuff\n\n    let players = []\n    db.collection(\"games\").doc(this.props.code.toString())\n    .get().then(function(doc) {\n        if (doc.exists) {\n            players = doc.data().players\n\n            players.unshift(self.state.name);\n  \n              db.collection(\"games\").doc(self.props.code.toString()).set({\n                players: players\n              })\n              .then(function() {\n                  console.log(\"Document successfully written!\");\n              })\n              .catch(function(error) {\n                  console.error(\"Error writing document: \", error);\n              });\n\n\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n\n\n  }\n\n  updateName = (ev) => {\n    this.setState({name: ev.target.value})\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <p style={{fontSize: \"2em\"}}>\n                Game Code: {this.props.code}\n          </p>\n\n          { this.state.visible ? <p style={{fontSize: '0.8em'}}>Please enter your name for the game!</p> : null  }\n            \n          <MDBInput onChange={this.updateName} name='gameCode' style={{color: \"whitesmoke\"}} label=\"Name\" />\n\n            <Button\n                outline\n                color=\"primary\"\n                onClick={this.goToLobby}\n            >\n                Go to Lobby!\n            </Button>\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Join;\n","import React, { Component } from 'react';\nimport './App.css';\n// import {firestore} from './base.js';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nimport Home from './Home'\nimport CreateGame from './CreateGame'\nimport Lobby from './Lobby'\nimport Join from './Join'\n\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Switch>\n\n        <Route exact path='/ToHell/CreateGame' render={() => (\n            <CreateGame setGameCode={this.setGameCode}/>\n        )}/>\n        \n        <Route exact path='/ToHell/Home' render={() => (\n            <Home />\n        )}/>\n\n        <Route exact path='/ToHell/Lobby/:code' render={(match) => (\n            <Lobby code={match.match.params.code}/>\n        )}/>\n\n        <Route exact path='/ToHell/Join/:code' render={(match) => (\n            <Join code={match.match.params.code}/>\n        )}/>\n\n        <Route render={() => {\n          return (\n            // eslint-disable-next-line\n            <Redirect to={`/ToHell/Home`} />\n          )\n        }}/>\n\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <Route component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}