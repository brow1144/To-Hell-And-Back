{"version":3,"sources":["base.js","Home.js","CreateGame.js","Lobby.js","Join.js","Guess.js","App.js","serviceWorker.js","index.js"],"names":["firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleJoin","ev","preventDefault","checkGame","target","gameCode","value","code","self","assertThisInitialized","collection","doc","get","then","exists","setState","visible","state","undefined","react_default","a","createElement","Redirect","to","concat","className","style","fontSize","color","mdbreact","onSubmit","type","name","label","outline","size","NavLink","textDecoration","cursor","paddingTop","Component","CreateGame","generateCode","Math","floor","random","goToLobby","tmp","password","toString","set","players","console","log","catch","error","updateName","updatePassword","onChange","onClick","Lobby","props","componentWillMount","onSnapshot","data","_this2","margin","backgroundColor","reactstrap_es","keys","map","key","sm","height","Join","alreadyTaken","result","i","player","transition","visible1","unshift","Guess","increment","guess","decrement","App","Switch","Route","exact","path","render","src_CreateGame","setGameCode","src_Home","match","src_Lobby","params","src_Join","src_Guess","roundNumber","roundnumber","Boolean","window","location","hostname","ReactDOM","BrowserRouter","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0234bc49.chunk.js","sourcesContent":["// import firebase from 'firebase';\n// const firebase = require(\"firebase\");\n// // Required for side-effects\n// require(\"firebase/firestore\");\n// import firebase from 'firebase'\nvar firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDynm1iQEugqjNl9b4UoVD5ANFhdJ3uW3c\",\n  authDomain: \"tohell-b7845.firebaseapp.com\",\n  databaseURL: \"https://tohell-b7845.firebaseio.com\",\n  projectId: \"tohell-b7845\",\n  storageBucket: \"tohell-b7845.appspot.com\",\n  messagingSenderId: \"568288665390\"\n});\n\n// export const  db = firebase.database();\n\nexport const db = firebase.firestore();\n\nconst settings = {timestampsInSnapshots: true};\ndb.settings(settings);\n\nexport default firebase;","import React, { Component } from 'react';\nimport './App.css';\nimport {db} from './base.js';\n\nimport { NavLink, Redirect} from 'react-router-dom'\n\nimport { FormInline, Button, MDBInput } from 'mdbreact';\n\nclass Home extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      code: 0, \n      visible: false,\n    }\n  }\n\n  handleJoin = (ev) => {\n    ev.preventDefault()\n\n    this.checkGame(ev.target.gameCode.value)\n  }\n\n  checkGame = (code) => {\n    let self = this\n    var docRef = db.collection(\"games\").doc(code);\n\n    docRef.get().then(function(doc) {\n        if (doc.exists) {\n          self.setState({code: code})\n        } else {\n          self.setState({visible: true})\n        }\n    })\n    \n  }\n\n\n  render() {\n\n    if (this.state.code !== null && this.state.code !== 0 && this.state.code !== undefined) {\n      return <Redirect to={`/ToHell/Join/${this.state.code}`}/>\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p style={{fontSize: \"2em\"}}>\n            To Hell and Back!\n          </p>\n\n          { this.state.visible ? <p style={{color: 'yellow', fontSize: '0.8em'}}>Game code does not exist</p> : null  }\n      \n\n          <FormInline onSubmit={this.handleJoin} className=\"md-form m-0\">\n        \n            <MDBInput type=\"number\" name='gameCode' style={{color: \"whitesmoke\"}} label=\"Game Code\" />\n            \n              <Button\n                outline\n                color=\"white\"\n                size=\"sm\"\n                type=\"submit\"\n                className=\"mr-auto\"\n              >\n                Search\n              </Button>\n\n          </FormInline>\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/CreateGame`}>\n            <div style={{cursor: 'pointer'}} className='sideHover'>\n              <h6 style={{paddingTop: \"3em\", fontSize: '0.7em'}}>Create Game</h6>\n            </div>\n          </NavLink>\n        \n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nimport {db} from './base.js';\nimport {Button, MDBInput} from 'mdbreact'\nimport { NavLink } from 'react-router-dom'\n\nclass CreateGame extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      code: 0,\n      name: '',\n      visible: false,\n      password: '',\n    }\n  }\n\n  componentWillMount() {\n    this.generateCode()    \n  }\n\n  generateCode = () => {\n    // TODO Make sure code is not already being used\n    let code = Math.floor(Math.random()*90000) + 10000\n\n    this.setState({code: code})\n  }\n\n  goToLobby = () => {\n    if (this.state.name === null || this.state.name === '' || this.state.name === undefined) {\n      this.setState({visible: true})\n      return\n    }\n\n    // db.ref(`games/${this.state.code.toString()}`).set({\n    //   players: [this.state.name],\n    // });\n\n    let tmp = {name: this.state.name, password: this.state.password}\n\n    db.collection(\"games\").doc(this.state.code.toString()).set({\n      players: [tmp]\n    })\n    .then(function() {\n        console.log(\"Document successfully written!\");\n    })\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    });\n  }\n\n  updateName = (ev) => {\n    this.setState({name: ev.target.value})\n  }\n\n  updatePassword = (ev) => {\n    this.setState({password: ev.target.value})\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <p style={{fontSize: \"2em\"}}>\n                Game Code: {this.state.code}\n          </p>\n\n          { this.state.visible ? <p style={{fontSize: '0.8em'}}>Please enter your name for the game!</p> : null  }\n            \n          <MDBInput onChange={this.updateName} name='gameCode' style={{color: \"whitesmoke\"}} label=\"Name\" />\n\n          <MDBInput onChange={this.updatePassword} name='gameCode' style={{color: \"whitesmoke\"}} label=\"Short Password\" />\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/Lobby/${this.state.code}`}>\n            <Button\n                outline\n                color=\"primary\"\n                onClick={this.goToLobby}\n            >\n                Go to Lobby!\n            </Button>\n          </NavLink>\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default CreateGame;\n","import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom'\nimport {db} from './base.js';\nimport {Row, Col} from 'reactstrap'\nimport {Button} from 'mdbreact'\n\nclass Lobby extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      players: [],\n    }\n  }\n\n  componentWillMount = () => {\n    let self = this\n\n    db.collection(\"games\").doc(this.props.code.toString())\n    .onSnapshot(function(doc) {\n        self.setState({players: doc.data().players})\n    });\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n\n        <p style={{margin: '0', fontSize: '2.5em', \n                  backgroundColor: '#282c34', color: \"whitesmoke\", \n                  paddingTop: '2em'}}\n        >\n          Join at Code: {this.props.code}\n        </p>\n\n        <div style={{backgroundColor: '#282c34', color: 'whitesmoke',\n                      paddingTop: '5em', }}>\n\n          <Row>\n            {Object.keys(this.state.players).map((key) => {\n              return (\n                <Col key={this.state.players[key].name} sm='3'>\n                  <p>{this.state.players[key].name}</p>\n                </Col>   \n              )\n            })}\n          </Row>\n\n          <p style={{height: '5em'}}> </p>\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/${this.props.code}/${this.props.name}/Guess/1`}>\n            <Button\n                outline\n                color=\"primary\"\n                \n            >\n                Start!\n            </Button>\n          </NavLink>\n\n          </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Lobby;\n","import React, { Component } from 'react';\n\nimport { Redirect} from 'react-router-dom'\nimport {db} from './base.js';\nimport {Button, MDBInput} from 'mdbreact'\n\nclass Join extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      visible: false,\n      visible1: false,\n      transition: false,\n      password: '',\n    }\n  }\n\n  alreadyTaken = (players) => {\n    let self = this\n    let result =  ''\n    for (let i in players) {\n      let player = players[i]\n      if (player.name === self.state.name && player.password === self.state.password) {\n        // Log back in \n        result = 'Log In'\n        return result\n      } else if (player.name === self.state.name && player.password !== self.state.password) {\n        // Player with same name\n        result = 'Already Taken'\n        return result\n      } else {\n        // New Player\n        result = 'New Player'\n      }\n    }\n    return result\n  }\n\n  goToLobby = () => {\n    let self = this\n    if (this.state.name === null || this.state.name === '' || this.state.name === undefined) {\n      this.setState({visible: true})\n      return\n    }\n\n    // TODO Set stuff\n\n    let players = []\n    db.collection(\"games\").doc(this.props.code.toString())\n    .get().then(function(doc) {\n        if (doc.exists) {\n            players = doc.data().players\n\n            let result = self.alreadyTaken(players)\n            \n            if (result === 'Log In') {\n              // console.log('log back in')\n              self.setState({transition: true})\n              return\n\n            } else if (result === 'Already Taken') {\n              // console.log('alreday taken')\n\n              // TODO Error Message\n              self.setState({visible1: true})\n\n              return\n            } else {\n              // console.log('new player')\n\n            }\n\n            let tmp = {name: self.state.name, password: self.state.password}\n\n            players.unshift(tmp);\n  \n              db.collection(\"games\").doc(self.props.code.toString()).set({\n                players: players\n              })\n              .then(function() {\n                  self.setState({transition: true})\n              })\n              .catch(function(error) {\n                  console.error(\"Error writing document: \", error);\n              });\n\n\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n    });\n\n\n  }\n\n  updateName = (ev) => {\n    this.setState({name: ev.target.value})\n  }\n\n  updatePassword = (ev) => {\n    this.setState({password: ev.target.value})\n  }\n\n  render() {\n\n    if (this.state.transition) {\n      return <Redirect to={`/ToHell/Lobby/${this.props.code}/${this.state.name}`}/>\n    }\n\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <p style={{fontSize: \"2em\"}}>\n                Game Code: {this.props.code}\n          </p>\n\n          { this.state.visible ? <p style={{fontSize: '0.8em'}}>Please enter your name for the game!</p> : null  }\n          { this.state.visible1 ? <p style={{fontSize: '0.8em'}}>That name is already taken!</p> : null  }\n\n            \n          <MDBInput onChange={this.updateName} name='gameCode' style={{color: \"whitesmoke\"}} label=\"Name\" />\n\n          <MDBInput onChange={this.updatePassword} name='gameCode' style={{color: \"whitesmoke\"}} label=\"Short Password\" />\n\n\n            <Button\n                outline\n                color=\"primary\"\n                onClick={this.goToLobby}\n            >\n                Go to Lobby!\n            </Button>\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Join;\n","import React, { Component } from 'react';\n\nimport {db} from './base.js';\nimport {Button} from 'mdbreact'\nimport { NavLink } from 'react-router-dom'\nimport {Row, Col} from 'reactstrap'\n\nclass Guess extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      guess: 0,\n    }\n  }\n\n  componentWillMount() {\n\n  }\n\n  increment = () => {\n    let tmp = this.state.guess + 1\n    this.setState({guess: tmp})\n\n    if (this.state.guess + 1 > 10) {\n      this.setState({guess: 10})\n    }\n  }\n\n  decrement = () => {\n    let tmp = this.state.guess - 1\n    this.setState({guess: tmp})\n    \n    if (this.state.guess - 1 < 0) {\n      this.setState({guess: 0})\n    }\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <header className=\"App-header\">\n          \n          <p style={{fontSize: \"2em\"}}> {this.props.name}'s Round 1 Guess</p>\n\n          <p style={{height: '1.5em'}}> </p>\n\n          <Button onClick={this.increment} outline color=\"success\">\n            +\n          </Button>\n          \n          <p style={{fontSize: \"5em\"}}>\n            {this.state.guess}\n          </p>\n\n          <Button onClick={this.decrement} outline color=\"success\">\n            -\n          </Button>\n           \n          <p style={{height: '3em'}}> </p>\n\n          <NavLink style={{textDecoration: 'none'}} to={`/ToHell/Lobby/${this.state.code}`}>\n            <Button\n                outline\n                color=\"primary\"\n            >\n                Next!\n            </Button>\n          </NavLink>\n\n        </header>\n      </div>\n\n    );\n  }\n}\n\nexport default Guess;\n","import React, { Component } from 'react';\nimport './App.css';\n// import {firestore} from './base.js';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nimport Home from './Home'\nimport CreateGame from './CreateGame'\nimport Lobby from './Lobby'\nimport Join from './Join'\nimport Guess from './Guess'\n\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Switch>\n\n        <Route exact path='/ToHell/CreateGame' render={() => (\n            <CreateGame setGameCode={this.setGameCode}/>\n        )}/>\n        \n        <Route exact path='/ToHell' render={() => (\n            <Home />\n        )}/>\n\n        <Route exact path='/ToHell/Lobby/:code/:name' render={(match) => (\n            <Lobby code={match.match.params.code} name={match.match.params.name}/>\n        )}/>\n\n        <Route exact path='/ToHell/Join/:code' render={(match) => (\n            <Join code={match.match.params.code}/>\n        )}/>\n\n        <Route exact path='/ToHell/:code/:name/Guess/:roundnumber' render={(match) => (\n            <Guess code={match.match.params.code} name={match.match.params.name} roundNumber={match.match.params.roundnumber}/>\n        )}/>\n\n        <Route render={() => {\n          return (\n            // eslint-disable-next-line\n            <Redirect to={`/ToHell`} />\n          )\n        }}/>\n\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <Route component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}